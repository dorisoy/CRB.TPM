using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CRB.TPM.Mod.Scheduler.Core.Infrastructure.Defaults;

public class CreateTableSql
{
    /// <summary>
    /// Quartz结构 （SqlServer）
    /// </summary>
    public List<string> SqlServer = new List<string>
    {
        "IF OBJECT_ID(N'[dbo].[FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS]', N'F') IS NOT NULL\r\nALTER TABLE [dbo].[QRTZ_TRIGGERS] DROP CONSTRAINT [FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS];\r\nGO\r\n\r\nIF OBJECT_ID(N'[dbo].[FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS]', N'F') IS NOT NULL\r\nALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] DROP CONSTRAINT [FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS];\r\nGO\r\n\r\nIF OBJECT_ID(N'[dbo].[FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS]', N'F') IS NOT NULL\r\nALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] DROP CONSTRAINT [FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS];\r\nGO\r\n\r\nIF OBJECT_ID(N'[dbo].[FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS]', N'F') IS NOT NULL\r\nALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] DROP CONSTRAINT [FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS];\r\nGO\r\n\r\nIF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_QRTZ_JOB_LISTENERS_QRTZ_JOB_DETAILS]') AND parent_object_id = OBJECT_ID(N'[dbo].[QRTZ_JOB_LISTENERS]'))\r\nALTER TABLE [dbo].[QRTZ_JOB_LISTENERS] DROP CONSTRAINT [FK_QRTZ_JOB_LISTENERS_QRTZ_JOB_DETAILS];\r\n\r\nIF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_QRTZ_TRIGGER_LISTENERS_QRTZ_TRIGGERS]') AND parent_object_id = OBJECT_ID(N'[dbo].[QRTZ_TRIGGER_LISTENERS]'))\r\nALTER TABLE [dbo].[QRTZ_TRIGGER_LISTENERS] DROP CONSTRAINT [FK_QRTZ_TRIGGER_LISTENERS_QRTZ_TRIGGERS];\r\n\r\n\r\nIF OBJECT_ID(N'[dbo].[QRTZ_CALENDARS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_CALENDARS];\r\nGO\r\n\r\nIF OBJECT_ID(N'[dbo].[QRTZ_CRON_TRIGGERS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_CRON_TRIGGERS];\r\nGO\r\n\r\nIF OBJECT_ID(N'[dbo].[QRTZ_BLOB_TRIGGERS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_BLOB_TRIGGERS];\r\nGO\r\n\r\nIF OBJECT_ID(N'[dbo].[QRTZ_FIRED_TRIGGERS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_FIRED_TRIGGERS];\r\nGO\r\n\r\nIF OBJECT_ID(N'[dbo].[QRTZ_PAUSED_TRIGGER_GRPS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS];\r\nGO\r\n\r\nIF  OBJECT_ID(N'[dbo].[QRTZ_JOB_LISTENERS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_JOB_LISTENERS];\r\n\r\nIF OBJECT_ID(N'[dbo].[QRTZ_SCHEDULER_STATE]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_SCHEDULER_STATE];\r\nGO\r\n\r\nIF OBJECT_ID(N'[dbo].[QRTZ_LOCKS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_LOCKS];\r\nGO\r\nIF OBJECT_ID(N'[dbo].[QRTZ_TRIGGER_LISTENERS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_TRIGGER_LISTENERS];\r\n\r\n\r\nIF OBJECT_ID(N'[dbo].[QRTZ_JOB_DETAILS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_JOB_DETAILS];\r\nGO\r\n\r\nIF OBJECT_ID(N'[dbo].[QRTZ_SIMPLE_TRIGGERS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS];\r\nGO\r\n\r\nIF OBJECT_ID(N'[dbo].[QRTZ_SIMPROP_TRIGGERS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS];\r\nGO\r\n\r\nIF OBJECT_ID(N'[dbo].[QRTZ_TRIGGERS]', N'U') IS NOT NULL\r\nDROP TABLE [dbo].[QRTZ_TRIGGERS];\r\nGO\r\n\r\nCREATE TABLE [dbo].[QRTZ_CALENDARS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [CALENDAR_NAME] nvarchar(200) NOT NULL,\r\n  [CALENDAR] varbinary(max) NOT NULL\r\n);\r\nGO\r\n\r\nCREATE TABLE [dbo].[QRTZ_CRON_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [CRON_EXPRESSION] nvarchar(120) NOT NULL,\r\n  [TIME_ZONE_ID] nvarchar(80) \r\n);\r\nGO\r\n\r\nCREATE TABLE [dbo].[QRTZ_FIRED_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [ENTRY_ID] nvarchar(140) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [INSTANCE_NAME] nvarchar(200) NOT NULL,\r\n  [FIRED_TIME] bigint NOT NULL,\r\n  [SCHED_TIME] bigint NOT NULL,\r\n  [PRIORITY] int NOT NULL,\r\n  [STATE] nvarchar(16) NOT NULL,\r\n  [JOB_NAME] nvarchar(150) NULL,\r\n  [JOB_GROUP] nvarchar(150) NULL,\r\n  [IS_NONCONCURRENT] bit NULL,\r\n  [REQUESTS_RECOVERY] bit NULL \r\n);\r\nGO\r\n\r\nCREATE TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL \r\n);\r\nGO\r\n\r\nCREATE TABLE [dbo].[QRTZ_SCHEDULER_STATE] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [INSTANCE_NAME] nvarchar(200) NOT NULL,\r\n  [LAST_CHECKIN_TIME] bigint NOT NULL,\r\n  [CHECKIN_INTERVAL] bigint NOT NULL\r\n);\r\nGO\r\n\r\nCREATE TABLE [dbo].[QRTZ_LOCKS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [LOCK_NAME] nvarchar(40) NOT NULL \r\n);\r\nGO\r\n\r\nCREATE TABLE [dbo].[QRTZ_JOB_DETAILS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [JOB_NAME] nvarchar(150) NOT NULL,\r\n  [JOB_GROUP] nvarchar(150) NOT NULL,\r\n  [DESCRIPTION] nvarchar(250) NULL,\r\n  [JOB_CLASS_NAME] nvarchar(250) NOT NULL,\r\n  [IS_DURABLE] bit NOT NULL,\r\n  [IS_NONCONCURRENT] bit NOT NULL,\r\n  [IS_UPDATE_DATA] bit NOT NULL,\r\n  [REQUESTS_RECOVERY] bit NOT NULL,\r\n  [JOB_DATA] varbinary(max) NULL\r\n);\r\nGO\r\n\r\nCREATE TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [REPEAT_COUNT] int NOT NULL,\r\n  [REPEAT_INTERVAL] bigint NOT NULL,\r\n  [TIMES_TRIGGERED] int NOT NULL\r\n);\r\nGO\r\n\r\nCREATE TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [STR_PROP_1] nvarchar(512) NULL,\r\n  [STR_PROP_2] nvarchar(512) NULL,\r\n  [STR_PROP_3] nvarchar(512) NULL,\r\n  [INT_PROP_1] int NULL,\r\n  [INT_PROP_2] int NULL,\r\n  [LONG_PROP_1] bigint NULL,\r\n  [LONG_PROP_2] bigint NULL,\r\n  [DEC_PROP_1] numeric(13,4) NULL,\r\n  [DEC_PROP_2] numeric(13,4) NULL,\r\n  [BOOL_PROP_1] bit NULL,\r\n  [BOOL_PROP_2] bit NULL,\r\n  [TIME_ZONE_ID] nvarchar(80) NULL \r\n);\r\nGO\r\n\r\nCREATE TABLE [dbo].[QRTZ_BLOB_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [BLOB_DATA] varbinary(max) NULL\r\n);\r\nGO\r\n\r\nCREATE TABLE [dbo].[QRTZ_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [JOB_NAME] nvarchar(150) NOT NULL,\r\n  [JOB_GROUP] nvarchar(150) NOT NULL,\r\n  [DESCRIPTION] nvarchar(250) NULL,\r\n  [NEXT_FIRE_TIME] bigint NULL,\r\n  [PREV_FIRE_TIME] bigint NULL,\r\n  [PRIORITY] int NULL,\r\n  [TRIGGER_STATE] nvarchar(16) NOT NULL,\r\n  [TRIGGER_TYPE] nvarchar(8) NOT NULL,\r\n  [START_TIME] bigint NOT NULL,\r\n  [END_TIME] bigint NULL,\r\n  [CALENDAR_NAME] nvarchar(200) NULL,\r\n  [MISFIRE_INSTR] int NULL,\r\n  [JOB_DATA] varbinary(max) NULL\r\n);\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_CALENDARS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_CALENDARS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [CALENDAR_NAME]\r\n  );\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_CRON_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_FIRED_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_FIRED_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [ENTRY_ID]\r\n  );\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_PAUSED_TRIGGER_GRPS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_SCHEDULER_STATE] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_SCHEDULER_STATE] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [INSTANCE_NAME]\r\n  );\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_LOCKS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_LOCKS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [LOCK_NAME]\r\n  );\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_JOB_DETAILS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_JOB_DETAILS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [JOB_NAME],\r\n    [JOB_GROUP]\r\n  );\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_SIMPLE_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_SIMPROP_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_BLOB_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_BLOB_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] ADD\r\n  CONSTRAINT [FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) REFERENCES [dbo].[QRTZ_TRIGGERS] (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) ON DELETE CASCADE;\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] ADD\r\n  CONSTRAINT [FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) REFERENCES [dbo].[QRTZ_TRIGGERS] (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) ON DELETE CASCADE;\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] ADD\r\n  CONSTRAINT [FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY\r\n  (\r\n\t[SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) REFERENCES [dbo].[QRTZ_TRIGGERS] (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) ON DELETE CASCADE;\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_TRIGGERS] ADD\r\n  CONSTRAINT [FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS] FOREIGN KEY\r\n  (\r\n    [SCHED_NAME],\r\n    [JOB_NAME],\r\n    [JOB_GROUP]\r\n  ) REFERENCES [dbo].[QRTZ_JOB_DETAILS] (\r\n    [SCHED_NAME],\r\n    [JOB_NAME],\r\n    [JOB_GROUP]\r\n  );\r\nGO\r\n\r\n-- drop indexe if they exist and rebuild if current ones\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_J] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_JG] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_C] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_G] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_G_J] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_STATE] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_N_STATE] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_N_G_STATE] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_NEXT_FIRE_TIME] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_NFT_ST] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_NFT_MISFIRE] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_NFT_ST_MISFIRE] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_T_NFT_ST_MISFIRE_GRP] ON [dbo].[QRTZ_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_FT_TRIG_INST_NAME] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_FT_INST_JOB_REQ_RCVRY] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_FT_J_G] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_FT_JG] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_FT_T_G] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_FT_TG] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_FT_G_J] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\nDROP INDEX IF EXISTS [IDX_QRTZ_FT_G_T] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\nGO\r\n\r\n\r\nCREATE INDEX [IDX_QRTZ_T_G_J]                 ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, JOB_GROUP, JOB_NAME);\r\nCREATE INDEX [IDX_QRTZ_T_C]                   ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, CALENDAR_NAME);\r\n\r\nCREATE INDEX [IDX_QRTZ_T_N_G_STATE]           ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, TRIGGER_GROUP, TRIGGER_STATE);\r\nCREATE INDEX [IDX_QRTZ_T_STATE]               ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, TRIGGER_STATE);\r\nCREATE INDEX [IDX_QRTZ_T_N_STATE]             ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_STATE);\r\nCREATE INDEX [IDX_QRTZ_T_NEXT_FIRE_TIME]      ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, NEXT_FIRE_TIME);\r\nCREATE INDEX [IDX_QRTZ_T_NFT_ST]              ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);\r\nCREATE INDEX [IDX_QRTZ_T_NFT_ST_MISFIRE]      ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);\r\nCREATE INDEX [IDX_QRTZ_T_NFT_ST_MISFIRE_GRP]  ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP, TRIGGER_STATE);\r\n\r\nCREATE INDEX [IDX_QRTZ_FT_INST_JOB_REQ_RCVRY] ON [dbo].[QRTZ_FIRED_TRIGGERS](SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);\r\nCREATE INDEX [IDX_QRTZ_FT_G_J]                ON [dbo].[QRTZ_FIRED_TRIGGERS](SCHED_NAME, JOB_GROUP, JOB_NAME);\r\nCREATE INDEX [IDX_QRTZ_FT_G_T]                ON [dbo].[QRTZ_FIRED_TRIGGERS](SCHED_NAME, TRIGGER_GROUP, TRIGGER_NAME);\r\nGO\r\n\r\n--\r\n\r\nALTER TABLE [dbo].[QRTZ_CALENDARS]\r\nALTER COLUMN [CALENDAR] [VARBINARY](MAX) NOT NULL;\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_JOB_DETAILS]\r\nALTER COLUMN [JOB_DATA] [VARBINARY](MAX) NULL;\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_BLOB_TRIGGERS]\r\nALTER COLUMN [BLOB_DATA] [VARBINARY](MAX) NULL;\r\nGO\r\n\r\nALTER TABLE [dbo].[QRTZ_TRIGGERS]\r\nALTER COLUMN [JOB_DATA] [VARBINARY](MAX) NULL;\r\nGO"
    };

    /// <summary>
    /// Quartz结构 （MySql）
    /// </summary>
    public List<string> MySql = new List<string>
    {
        "DROP TABLE IF EXISTS QRTZ_FIRED_TRIGGERS;\r\nDROP TABLE IF EXISTS QRTZ_PAUSED_TRIGGER_GRPS;\r\nDROP TABLE IF EXISTS QRTZ_SCHEDULER_STATE;\r\nDROP TABLE IF EXISTS QRTZ_LOCKS;\r\nDROP TABLE IF EXISTS QRTZ_SIMPLE_TRIGGERS;\r\nDROP TABLE IF EXISTS QRTZ_SIMPROP_TRIGGERS;\r\nDROP TABLE IF EXISTS QRTZ_CRON_TRIGGERS;\r\nDROP TABLE IF EXISTS QRTZ_BLOB_TRIGGERS;\r\nDROP TABLE IF EXISTS QRTZ_TRIGGERS;\r\nDROP TABLE IF EXISTS QRTZ_JOB_DETAILS;\r\nDROP TABLE IF EXISTS QRTZ_CALENDARS;\r\n\r\nCREATE TABLE QRTZ_JOB_DETAILS(\r\nSCHED_NAME VARCHAR(120) NOT NULL,\r\nJOB_NAME VARCHAR(200) NOT NULL,\r\nJOB_GROUP VARCHAR(200) NOT NULL,\r\nDESCRIPTION VARCHAR(250) NULL,\r\nJOB_CLASS_NAME VARCHAR(250) NOT NULL,\r\nIS_DURABLE BOOLEAN NOT NULL,\r\nIS_NONCONCURRENT BOOLEAN NOT NULL,\r\nIS_UPDATE_DATA BOOLEAN NOT NULL,\r\nREQUESTS_RECOVERY BOOLEAN NOT NULL,\r\nJOB_DATA BLOB NULL,\r\nPRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP))\r\nENGINE=InnoDB;\r\n\r\nCREATE TABLE QRTZ_TRIGGERS (\r\nSCHED_NAME VARCHAR(120) NOT NULL,\r\nTRIGGER_NAME VARCHAR(200) NOT NULL,\r\nTRIGGER_GROUP VARCHAR(200) NOT NULL,\r\nJOB_NAME VARCHAR(200) NOT NULL,\r\nJOB_GROUP VARCHAR(200) NOT NULL,\r\nDESCRIPTION VARCHAR(250) NULL,\r\nNEXT_FIRE_TIME BIGINT(19) NULL,\r\nPREV_FIRE_TIME BIGINT(19) NULL,\r\nPRIORITY INTEGER NULL,\r\nTRIGGER_STATE VARCHAR(16) NOT NULL,\r\nTRIGGER_TYPE VARCHAR(8) NOT NULL,\r\nSTART_TIME BIGINT(19) NOT NULL,\r\nEND_TIME BIGINT(19) NULL,\r\nCALENDAR_NAME VARCHAR(200) NULL,\r\nMISFIRE_INSTR SMALLINT(2) NULL,\r\nJOB_DATA BLOB NULL,\r\nPRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\r\nFOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)\r\nREFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP))\r\nENGINE=InnoDB;\r\n\r\nCREATE TABLE QRTZ_SIMPLE_TRIGGERS (\r\nSCHED_NAME VARCHAR(120) NOT NULL,\r\nTRIGGER_NAME VARCHAR(200) NOT NULL,\r\nTRIGGER_GROUP VARCHAR(200) NOT NULL,\r\nREPEAT_COUNT BIGINT(7) NOT NULL,\r\nREPEAT_INTERVAL BIGINT(12) NOT NULL,\r\nTIMES_TRIGGERED BIGINT(10) NOT NULL,\r\nPRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\r\nFOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\r\nREFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))\r\nENGINE=InnoDB;\r\n\r\nCREATE TABLE QRTZ_CRON_TRIGGERS (\r\nSCHED_NAME VARCHAR(120) NOT NULL,\r\nTRIGGER_NAME VARCHAR(200) NOT NULL,\r\nTRIGGER_GROUP VARCHAR(200) NOT NULL,\r\nCRON_EXPRESSION VARCHAR(120) NOT NULL,\r\nTIME_ZONE_ID VARCHAR(80),\r\nPRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\r\nFOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\r\nREFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))\r\nENGINE=InnoDB;\r\n\r\nCREATE TABLE QRTZ_SIMPROP_TRIGGERS\r\n  (          \r\n    SCHED_NAME VARCHAR(120) NOT NULL,\r\n    TRIGGER_NAME VARCHAR(200) NOT NULL,\r\n    TRIGGER_GROUP VARCHAR(200) NOT NULL,\r\n    STR_PROP_1 VARCHAR(512) NULL,\r\n    STR_PROP_2 VARCHAR(512) NULL,\r\n    STR_PROP_3 VARCHAR(512) NULL,\r\n    INT_PROP_1 INT NULL,\r\n    INT_PROP_2 INT NULL,\r\n    LONG_PROP_1 BIGINT NULL,\r\n    LONG_PROP_2 BIGINT NULL,\r\n    DEC_PROP_1 NUMERIC(13,4) NULL,\r\n    DEC_PROP_2 NUMERIC(13,4) NULL,\r\n    BOOL_PROP_1 BOOLEAN NULL,\r\n    BOOL_PROP_2 BOOLEAN NULL,\r\n    TIME_ZONE_ID VARCHAR(80) NULL,\r\n    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\r\n    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \r\n    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))\r\nENGINE=InnoDB;\r\n\r\nCREATE TABLE QRTZ_BLOB_TRIGGERS (\r\nSCHED_NAME VARCHAR(120) NOT NULL,\r\nTRIGGER_NAME VARCHAR(200) NOT NULL,\r\nTRIGGER_GROUP VARCHAR(200) NOT NULL,\r\nBLOB_DATA BLOB NULL,\r\nPRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\r\nINDEX (SCHED_NAME,TRIGGER_NAME, TRIGGER_GROUP),\r\nFOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\r\nREFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))\r\nENGINE=InnoDB;\r\n\r\nCREATE TABLE QRTZ_CALENDARS (\r\nSCHED_NAME VARCHAR(120) NOT NULL,\r\nCALENDAR_NAME VARCHAR(200) NOT NULL,\r\nCALENDAR BLOB NOT NULL,\r\nPRIMARY KEY (SCHED_NAME,CALENDAR_NAME))\r\nENGINE=InnoDB;\r\n\r\nCREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (\r\nSCHED_NAME VARCHAR(120) NOT NULL,\r\nTRIGGER_GROUP VARCHAR(200) NOT NULL,\r\nPRIMARY KEY (SCHED_NAME,TRIGGER_GROUP))\r\nENGINE=InnoDB;\r\n\r\nCREATE TABLE QRTZ_FIRED_TRIGGERS (\r\nSCHED_NAME VARCHAR(120) NOT NULL,\r\nENTRY_ID VARCHAR(140) NOT NULL,\r\nTRIGGER_NAME VARCHAR(200) NOT NULL,\r\nTRIGGER_GROUP VARCHAR(200) NOT NULL,\r\nINSTANCE_NAME VARCHAR(200) NOT NULL,\r\nFIRED_TIME BIGINT(19) NOT NULL,\r\nSCHED_TIME BIGINT(19) NOT NULL,\r\nPRIORITY INTEGER NOT NULL,\r\nSTATE VARCHAR(16) NOT NULL,\r\nJOB_NAME VARCHAR(200) NULL,\r\nJOB_GROUP VARCHAR(200) NULL,\r\nIS_NONCONCURRENT BOOLEAN NULL,\r\nREQUESTS_RECOVERY BOOLEAN NULL,\r\nPRIMARY KEY (SCHED_NAME,ENTRY_ID))\r\nENGINE=InnoDB;\r\n\r\nCREATE TABLE QRTZ_SCHEDULER_STATE (\r\nSCHED_NAME VARCHAR(120) NOT NULL,\r\nINSTANCE_NAME VARCHAR(200) NOT NULL,\r\nLAST_CHECKIN_TIME BIGINT(19) NOT NULL,\r\nCHECKIN_INTERVAL BIGINT(19) NOT NULL,\r\nPRIMARY KEY (SCHED_NAME,INSTANCE_NAME))\r\nENGINE=InnoDB;\r\n\r\nCREATE TABLE QRTZ_LOCKS (\r\nSCHED_NAME VARCHAR(120) NOT NULL,\r\nLOCK_NAME VARCHAR(40) NOT NULL,\r\nPRIMARY KEY (SCHED_NAME,LOCK_NAME))\r\nENGINE=InnoDB;\r\n\r\nCREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME,REQUESTS_RECOVERY);\r\nCREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME,JOB_GROUP);\r\n\r\nCREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);\r\nCREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME,JOB_GROUP);\r\nCREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME,CALENDAR_NAME);\r\nCREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);\r\nCREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE);\r\nCREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);\r\nCREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);\r\nCREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME,NEXT_FIRE_TIME);\r\nCREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);\r\nCREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);\r\nCREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);\r\nCREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);\r\n\r\nCREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME);\r\nCREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);\r\nCREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);\r\nCREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_GROUP);\r\nCREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);\r\nCREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);\r\n\r\ncommit; "
    };

    /// <summary>
    /// Quartz结构 （SQLite）
    /// </summary>
    public List<string> SQLite = new List<string>
    {
        "CREATE TABLE QRTZ_JOB_DETAILS ( SCHED_NAME NVARCHAR(120) NOT NULL, JOB_NAME NVARCHAR(150) NOT NULL, JOB_GROUP NVARCHAR(150) NOT NULL, DESCRIPTION NVARCHAR(250) NULL, JOB_CLASS_NAME NVARCHAR(250) NOT NULL, IS_DURABLE BIT NOT NULL, IS_NONCONCURRENT BIT NOT NULL, IS_UPDATE_DATA BIT NOT NULL, REQUESTS_RECOVERY BIT NOT NULL, JOB_DATA BLOB NULL, PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP) );",
        "CREATE TABLE QRTZ_TRIGGERS ( SCHED_NAME NVARCHAR(120) NOT NULL, TRIGGER_NAME NVARCHAR(150) NOT NULL, TRIGGER_GROUP NVARCHAR(150) NOT NULL, JOB_NAME NVARCHAR(150) NOT NULL, JOB_GROUP NVARCHAR(150) NOT NULL, DESCRIPTION NVARCHAR(250) NULL, NEXT_FIRE_TIME BIGINT NULL, PREV_FIRE_TIME BIGINT NULL, PRIORITY INTEGER NULL, TRIGGER_STATE NVARCHAR(16) NOT NULL, TRIGGER_TYPE NVARCHAR(8) NOT NULL, START_TIME BIGINT NOT NULL, END_TIME BIGINT NULL, CALENDAR_NAME NVARCHAR(200) NULL, MISFIRE_INSTR INTEGER NULL, JOB_DATA BLOB NULL, PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP), FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP) );",
        "CREATE TABLE QRTZ_SIMPLE_TRIGGERS ( SCHED_NAME NVARCHAR(120) NOT NULL, TRIGGER_NAME NVARCHAR(150) NOT NULL, TRIGGER_GROUP NVARCHAR(150) NOT NULL, REPEAT_COUNT BIGINT NOT NULL, REPEAT_INTERVAL BIGINT NOT NULL, TIMES_TRIGGERED BIGINT NOT NULL, PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP), FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON DELETE CASCADE );",
        "CREATE TRIGGER DELETE_SIMPLE_TRIGGER DELETE ON QRTZ_TRIGGERS BEGIN DELETE FROM QRTZ_SIMPLE_TRIGGERS WHERE SCHED_NAME=OLD.SCHED_NAME AND TRIGGER_NAME=OLD.TRIGGER_NAME AND TRIGGER_GROUP=OLD.TRIGGER_GROUP; END ;",
        "CREATE TABLE QRTZ_SIMPROP_TRIGGERS( SCHED_NAME NVARCHAR (120) NOT NULL , TRIGGER_NAME NVARCHAR (150) NOT NULL , TRIGGER_GROUP NVARCHAR (150) NOT NULL , STR_PROP_1 NVARCHAR (512) NULL, STR_PROP_2 NVARCHAR (512) NULL, STR_PROP_3 NVARCHAR (512) NULL, INT_PROP_1 INT NULL, INT_PROP_2 INT NULL, LONG_PROP_1 BIGINT NULL, LONG_PROP_2 BIGINT NULL, DEC_PROP_1 NUMERIC NULL, DEC_PROP_2 NUMERIC NULL, BOOL_PROP_1 BIT NULL, BOOL_PROP_2 BIT NULL, TIME_ZONE_ID NVARCHAR(80) NULL, PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP), FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) ON DELETE CASCADE);",
        "CREATE TRIGGER DELETE_SIMPROP_TRIGGER DELETE ON QRTZ_TRIGGERS BEGIN DELETE FROM QRTZ_SIMPROP_TRIGGERS WHERE SCHED_NAME=OLD.SCHED_NAME AND TRIGGER_NAME=OLD.TRIGGER_NAME AND TRIGGER_GROUP=OLD.TRIGGER_GROUP; END ;",
        "CREATE TABLE QRTZ_CRON_TRIGGERS( SCHED_NAME NVARCHAR(120) NOT NULL, TRIGGER_NAME NVARCHAR(150) NOT NULL, TRIGGER_GROUP NVARCHAR(150) NOT NULL, CRON_EXPRESSION NVARCHAR(250) NOT NULL, TIME_ZONE_ID NVARCHAR(80), PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP), FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) ON DELETE CASCADE);",
        "CREATE TRIGGER DELETE_CRON_TRIGGER DELETE ON QRTZ_TRIGGERS BEGIN DELETE FROM QRTZ_CRON_TRIGGERS WHERE SCHED_NAME=OLD.SCHED_NAME AND TRIGGER_NAME=OLD.TRIGGER_NAME AND TRIGGER_GROUP=OLD.TRIGGER_GROUP; END ;",
        "CREATE TABLE QRTZ_BLOB_TRIGGERS( SCHED_NAME NVARCHAR(120) NOT NULL, TRIGGER_NAME NVARCHAR(150) NOT NULL, TRIGGER_GROUP NVARCHAR(150) NOT NULL, BLOB_DATA BLOB NULL, PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP), FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) ON DELETE CASCADE); ",
        "CREATE TRIGGER DELETE_BLOB_TRIGGER DELETE ON QRTZ_TRIGGERS BEGIN DELETE FROM QRTZ_BLOB_TRIGGERS WHERE SCHED_NAME=OLD.SCHED_NAME AND TRIGGER_NAME=OLD.TRIGGER_NAME AND TRIGGER_GROUP=OLD.TRIGGER_GROUP; END ;",
        "CREATE TABLE QRTZ_CALENDARS( SCHED_NAME NVARCHAR(120) NOT NULL, CALENDAR_NAME NVARCHAR(200) NOT NULL, CALENDAR BLOB NOT NULL, PRIMARY KEY (SCHED_NAME,CALENDAR_NAME));",
        "CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS( SCHED_NAME NVARCHAR(120) NOT NULL, TRIGGER_GROUP NVARCHAR(150) NOT NULL, PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP));",
        "CREATE TABLE QRTZ_FIRED_TRIGGERS( SCHED_NAME NVARCHAR(120) NOT NULL, ENTRY_ID NVARCHAR(140) NOT NULL, TRIGGER_NAME NVARCHAR(150) NOT NULL, TRIGGER_GROUP NVARCHAR(150) NOT NULL, INSTANCE_NAME NVARCHAR(200) NOT NULL, FIRED_TIME BIGINT NOT NULL, SCHED_TIME BIGINT NOT NULL, PRIORITY INTEGER NOT NULL, STATE NVARCHAR(16) NOT NULL, JOB_NAME NVARCHAR(150) NULL, JOB_GROUP NVARCHAR(150) NULL, IS_NONCONCURRENT BIT NULL, REQUESTS_RECOVERY BIT NULL, PRIMARY KEY (SCHED_NAME,ENTRY_ID));",
        "CREATE TABLE QRTZ_SCHEDULER_STATE( SCHED_NAME NVARCHAR(120) NOT NULL, INSTANCE_NAME NVARCHAR(200) NOT NULL, LAST_CHECKIN_TIME BIGINT NOT NULL, CHECKIN_INTERVAL BIGINT NOT NULL, PRIMARY KEY (SCHED_NAME,INSTANCE_NAME));",
        "CREATE TABLE QRTZ_LOCKS( SCHED_NAME NVARCHAR(120) NOT NULL, LOCK_NAME NVARCHAR(40) NOT NULL, PRIMARY KEY (SCHED_NAME,LOCK_NAME));"
    };

    /// <summary>
    /// Quartz结构 （PostgreSQL）
    /// </summary>
    public List<string> PostgreSQL = new List<string>
    {
        "CREATE TABLE qrtz_job_details(sched_name TEXT NOT NULL, job_name  TEXT NOT NULL,job_group TEXT NOT NULL,description TEXT NULL,job_class_name   TEXT NOT NULL, is_durable BOOL NOT NULL,is_nonconcurrent BOOL NOT NULL,is_update_data BOOL NOT NULL, requests_recovery BOOL NOT NULL,job_data BYTEA NULL,PRIMARY KEY(sched_name,job_name,job_group));",
        "CREATE TABLE qrtz_triggers(sched_name TEXT NOT NULL, trigger_name TEXT NOT NULL, trigger_group TEXT NOT NULL, job_name TEXT NOT NULL, job_group TEXT NOT NULL, description TEXT NULL, next_fire_time BIGINT NULL, prev_fire_time BIGINT NULL, priority INTEGER NULL, trigger_state TEXT NOT NULL, trigger_type TEXT NOT NULL, start_time BIGINT NOT NULL, end_time BIGINT NULL, calendar_name TEXT NULL, misfire_instr SMALLINT NULL, job_data BYTEA NULL, PRIMARY KEY(sched_name, trigger_name, trigger_group), FOREIGN KEY(sched_name, job_name, job_group) REFERENCES qrtz_job_details(sched_name, job_name, job_group) );",
        "CREATE TABLE qrtz_simple_triggers(sched_name TEXT NOT NULL, trigger_name TEXT NOT NULL, trigger_group TEXT NOT NULL, repeat_count BIGINT NOT NULL, repeat_interval BIGINT NOT NULL, times_triggered BIGINT NOT NULL, PRIMARY KEY(sched_name, trigger_name, trigger_group), FOREIGN KEY(sched_name, trigger_name, trigger_group) REFERENCES qrtz_triggers(sched_name, trigger_name, trigger_group) ON DELETE CASCADE);",
        "CREATE TABLE QRTZ_SIMPROP_TRIGGERS(sched_name TEXT NOT NULL, trigger_name TEXT NOT NULL, trigger_group TEXT NOT NULL, str_prop_1 TEXT NULL, str_prop_2 TEXT NULL, str_prop_3 TEXT NULL, int_prop_1 INTEGER NULL, int_prop_2 INTEGER NULL, long_prop_1 BIGINT NULL, long_prop_2 BIGINT NULL, dec_prop_1 NUMERIC NULL, dec_prop_2 NUMERIC NULL, bool_prop_1 BOOL NULL, bool_prop_2 BOOL NULL, time_zone_id TEXT NULL, PRIMARY KEY(sched_name, trigger_name, trigger_group), FOREIGN KEY(sched_name, trigger_name, trigger_group) REFERENCES qrtz_triggers(sched_name, trigger_name, trigger_group) ON DELETE CASCADE);",
        "CREATE TABLE qrtz_cron_triggers(sched_name TEXT NOT NULL, trigger_name TEXT NOT NULL, trigger_group TEXT NOT NULL, cron_expression TEXT NOT NULL, time_zone_id TEXT, PRIMARY KEY(sched_name, trigger_name, trigger_group), FOREIGN KEY(sched_name, trigger_name, trigger_group) REFERENCES qrtz_triggers(sched_name, trigger_name, trigger_group) ON DELETE CASCADE);",
        "CREATE TABLE qrtz_blob_triggers(sched_name TEXT NOT NULL, trigger_name TEXT NOT NULL, trigger_group TEXT NOT NULL, blob_data BYTEA NULL, PRIMARY KEY(sched_name, trigger_name, trigger_group), FOREIGN KEY(sched_name, trigger_name, trigger_group) REFERENCES qrtz_triggers(sched_name, trigger_name, trigger_group) ON DELETE CASCADE);",
        "CREATE TABLE qrtz_calendars(sched_name TEXT NOT NULL, calendar_name TEXT NOT NULL, calendar BYTEA NOT NULL, PRIMARY KEY(sched_name, calendar_name));",
        "CREATE TABLE qrtz_paused_trigger_grps(sched_name TEXT NOT NULL, trigger_group TEXT NOT NULL, PRIMARY KEY(sched_name, trigger_group));",
        "CREATE TABLE qrtz_fired_triggers(sched_name TEXT NOT NULL, entry_id TEXT NOT NULL, trigger_name TEXT NOT NULL, trigger_group TEXT NOT NULL, instance_name TEXT NOT NULL, fired_time BIGINT NOT NULL, sched_time BIGINT NOT NULL, priority INTEGER NOT NULL, state TEXT NOT NULL, job_name TEXT NULL, job_group TEXT NULL, is_nonconcurrent BOOL NOT NULL, requests_recovery BOOL NULL, PRIMARY KEY(sched_name, entry_id));",
        "CREATE TABLE qrtz_scheduler_state(sched_name TEXT NOT NULL, instance_name TEXT NOT NULL, last_checkin_time BIGINT NOT NULL, checkin_interval BIGINT NOT NULL, PRIMARY KEY(sched_name, instance_name));",
        "CREATE TABLE qrtz_locks(sched_name TEXT NOT NULL, lock_name TEXT NOT NULL, PRIMARY KEY(sched_name, lock_name));",
        "create index idx_qrtz_j_req_recovery on qrtz_job_details(requests_recovery);",
        "create index idx_qrtz_t_next_fire_time on qrtz_triggers(next_fire_time);",
        "create index idx_qrtz_t_state on qrtz_triggers(trigger_state);",
        "create index idx_qrtz_t_nft_st on qrtz_triggers(next_fire_time, trigger_state);",
        "create index idx_qrtz_ft_trig_name on qrtz_fired_triggers(trigger_name);",
        "create index idx_qrtz_ft_trig_group on qrtz_fired_triggers(trigger_group);",
        "create index idx_qrtz_ft_trig_nm_gp on qrtz_fired_triggers(sched_name, trigger_name, trigger_group);",
        "create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(instance_name);",
        "create index idx_qrtz_ft_job_name on qrtz_fired_triggers(job_name);",
        "create index idx_qrtz_ft_job_group on qrtz_fired_triggers(job_group);",
        "create index idx_qrtz_ft_job_req_recovery on qrtz_fired_triggers(requests_recovery);",
    };
}
